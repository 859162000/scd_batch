-- 未分库分表的数据库结构
DROP TABLE IF EXISTS DAY_CUT_INFO;
CREATE TABLE DAY_CUT_INFO (
  ID INT NOT NULL AUTO_INCREMENT,
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01',
  ACCOUNT_DATE DATE NOT NULL
);

DROP TABLE IF EXISTS DAY_CUT_INFO_HIST;
CREATE TABLE DAY_CUT_INFO_HIST (
  ID INT  NOT NULL AUTO_INCREMENT,
  DAY_CUT_MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  DAY_CUT_CREATED TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00',
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01',
  ACCOUNT_DATE DATE NOT NULL
);

DROP TABLE IF EXISTS T_BATCH_RESULT;
CREATE TABLE T_BATCH_RESULT (
  ID INT  NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录修改时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '记录创建时间',
  BATCH_STATUS INT NOT NULL DEFAULT '0' COMMENT '跑批状态: 1-跑批结束, 2-正在跑批',
  ACCOUNT_DATE DATE NOT NULL DEFAULT '2010-01-01' COMMENT '账务日期'
);
CREATE PRIMARY KEY ON T_BATCH_RESULT(ID);

DROP TABLE IF EXISTS T_JOB;
CREATE TABLE T_JOB (
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录修改时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '记录创建时间',
  ID INT NOT NULL AUTO_INCREMENT COMMENT '任务ID',
  PHASE INT NOT NULL COMMENT '处理阶段',
  PHASE_STATUS INT NOT NULL COMMENT '阶段状态',
  RETRY_TIME INT NOT NULL COMMENT '重试次数',
  CHECK_POINT INT NOT NULL COMMENT '失败时恢复点',
  JOB_TYPE INT NOT NULL COMMENT '任务类型',
  DATABASE_ID VARCHAR NOT NULL COMMENT '分库号',
  TABLE_ID VARCHAR NOT NULL COMMENT '分表号',
  UUID VARCHAR NOT NULL COMMENT '运行该任务的处理机UUID',
  ACCOUNT_DATE DATE NOT NULL COMMENT '账务日期',
  START_TIME TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '任务运行开始时间',
  END_TIME TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '任务运行结束时间'
);
CREATE PRIMARY KEY ON T_JOB(ID);

DROP TABLE IF EXISTS M_PRICING_METHOD;
CREATE TABLE M_PRICING_METHOD (
  STATUS INT NOT NULL COMMENT '状态',
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '创建时间',
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  PRICING_METHOD_ID BIGINT NOT NULL COMMENT '定价方式ID',
  PRICING_METHOD_NAME VARCHAR(150) NOT NULL COMMENT '定价方式名称',
  REPAYMENT_METHOD_ID BIGINT NOT NULL COMMENT '还款方式ID',
  REPAYMENT_NO INT NOT NULL COMMENT '还款期数',
  PRICING_TYPE INT NOT NULL COMMENT '定价类型',
  PRICING_MODE INT NOT NULL COMMENT '定价计算规则',
  FIXED_AMOUNT BIGINT NOT NULL COMMENT '固定收取金额',
  MIN_AMOUNT BIGINT NOT NULL COMMENT '最小收取金额',
  PERCENT_VALUE INT NOT NULL COMMENT '利率',
  PRINCIPAL_MODE INT NOT NULL COMMENT '本金处理方式',
  YMD_FLAG INT NOT NULL COMMENT '年月日标志',
  YEAR_BASE_DAY INT NOT NULL COMMENT '年基准天数',
  MONTH_BASE_DAY INT NOT NULL COMMENT '月基准天数'
);
CREATE PRIMARY KEY ON M_PRICING_METHOD(ID);
CREATE INDEX IDX_PM_ID ON M_PRICING_METHOD(PRICING_METHOD_ID);
CREATE INDEX IDX_PM_REPAYMENT ON M_PRICING_METHOD(REPAYMENT_NO,PRICING_TYPE,REPAYMENT_METHOD_ID);

INSERT INTO `M_PRICING_METHOD` (`STATUS`, `MODIFIED`, `CREATED`, `ID`, `PRICING_METHOD_ID`, `PRICING_METHOD_NAME`, `REPAYMENT_METHOD_ID`, `REPAYMENT_NO`, `PRICING_TYPE`, `PRICING_MODE`, `FIXED_AMOUNT`, `MIN_AMOUNT`, `PERCENT_VALUE`, `PRINCIPAL_MODE`, `YMD_FLAG`, `YEAR_BASE_DAY`, `MONTH_BASE_DAY`) VALUES ('1', '2016-05-22 22:08:48', '2016-05-09 15:01:58', '1', '50001', 'installment', '1', '-1', '2', '1', '0', '1', '1000', '0', '0', '365', '30');
INSERT INTO `M_PRICING_METHOD` (`STATUS`, `MODIFIED`, `CREATED`, `ID`, `PRICING_METHOD_ID`, `PRICING_METHOD_NAME`, `REPAYMENT_METHOD_ID`, `REPAYMENT_NO`, `PRICING_TYPE`, `PRICING_MODE`, `FIXED_AMOUNT`, `MIN_AMOUNT`, `PERCENT_VALUE`, `PRINCIPAL_MODE`, `YMD_FLAG`, `YEAR_BASE_DAY`, `MONTH_BASE_DAY`) VALUES ('1', '2016-05-22 22:08:49', '2016-05-22 22:01:53', '222222', '4', ' ', '1', '-1', '4', '1', '0', '2', '2000', '0', '0', '365', '30');
INSERT INTO `M_PRICING_METHOD` (`STATUS`, `MODIFIED`, `CREATED`, `ID`, `PRICING_METHOD_ID`, `PRICING_METHOD_NAME`, `REPAYMENT_METHOD_ID`, `REPAYMENT_NO`, `PRICING_TYPE`, `PRICING_MODE`, `FIXED_AMOUNT`, `MIN_AMOUNT`, `PERCENT_VALUE`, `PRINCIPAL_MODE`, `YMD_FLAG`, `YEAR_BASE_DAY`, `MONTH_BASE_DAY`) VALUES ('1', '2016-05-22 23:04:09', '2016-05-22 22:01:53', '222223', '3', ' ', '1', '-1', '3', '1', '0', '3', '2000', '0', '1', '365', '30');


DROP TABLE IF EXISTS M_PRODUCT_RULE;
CREATE TABLE M_PRODUCT_RULE (
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  PRODUCT_ID BIGINT NOT NULL COMMENT '基础产品ID',
  PRODUCT_NAME VARCHAR NOT NULL DEFAULT '' COMMENT '基础产品名称',
  DESCRIPTION VARCHAR NOT NULL DEFAULT '' COMMENT '描述',
  PRODUCT_NO BIGINT NOT NULL COMMENT '产品序号',
  PRODUCT_RULE_STATUS INT NOT NULL COMMENT '产品规则状态',
  ACCOUNT_TYPE INT NOT NULL COMMENT ' 账户类型',
  CYCLE_TYPE INT NOT NULL COMMENT '分期类型',
  CYCLE_COUNT INT NOT NULL COMMENT '分期期数',
  REPAY_MODE_ID BIGINT NOT NULL COMMENT '还款方式ID，关联息费模块还款方式表',
  MINI_REPAY_TYPE INT NOT NULL COMMENT '最小还款额方式',
  INTEREST_START_TYPE INT NOT NULL COMMENT '起息日规则',
  CREDIT_LIMIT_RULE_ID BIGINT NOT NULL COMMENT '信用额度规则模板ID',
  PERIOD_GRACE INT NOT NULL COMMENT '宽限期，从还款日开始计算',
  MINI_REPAY_RATE INT NOT NULL COMMENT '最小还款比例，分母为10000',
  MINI_REPAY_AMOUNT INT NOT NULL COMMENT '最小还款金额',
  WRITE_OFF_RULE_ID BIGINT NOT NULL COMMENT '冲销顺序规则ID',
  BILL_DAY_RULE INT NOT NULL COMMENT '账单日规则',
  BILL_DAY INT NOT NULL COMMENT '账单日',
  REPAY_DAY_RULE INT NOT NULL COMMENT '还款日规则',
  CONSUME_INSTALLMENT_RULE INT NOT NULL COMMENT '消费分期规则',
  BILL_INSTALLMENT_RULE INT NOT NULL COMMENT '账单分期规则	',
  REPAY_DAY INT NOT NULL COMMENT '还款日',
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  MODIFY_ID BIGINT NOT NULL COMMENT '修改人ID',
  START_DATE TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '有效期开始时间',
  END_DATE TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '有效期结束时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '创建时间',
  CREATE_ID BIGINT NOT NULL COMMENT '创建人ID',
  VERIFIED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '审核时间',
  INTEREST_START_DAY int NOT NULL COMMENT '起息日',
  VERIFY_ID BIGINT NOT NULL COMMENT '审核人ID'
);
CREATE PRIMARY KEY ON M_PRODUCT_RULE(ID);



DROP TABLE IF EXISTS M_REPAYMENT_METHOD;
CREATE TABLE M_REPAYMENT_METHOD (
  STATUS INT NOT NULL COMMENT '状态',
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP  COMMENT '更新时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '创建时间',
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  REPAYMENT_METHOD_ID BIGINT NOT NULL COMMENT '还款方式ID',
  REPAYMENT_METHOD_NAME VARCHAR(150) NOT NULL COMMENT '还款方式名称',
  PRINCIPAL_TREATMENT INT NOT NULL COMMENT '本金处理方式',
  TEMPLATE_COUNT INT NOT NULL COMMENT '模板期数',
  FREE_COUNT INT NOT NULL COMMENT '空档期'
);
CREATE PRIMARY KEY ON M_REPAYMENT_METHOD(ID);
CREATE INDEX IDX_REPAYMENT_METHOD ON M_REPAYMENT_METHOD(REPAYMENT_METHOD_ID);



DROP TABLE IF EXISTS T_ACCG_REQ_LIST;
CREATE TABLE T_ACCG_REQ_LIST (
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增字段',
  STATE INT NOT NULL COMMENT '入账状态',
  REQ_TYPE INT NOT NULL COMMENT '请求类型',
  TRANSACTION_ID BIGINT NOT NULL COMMENT '交易流水',
  ACCOUNTING_NO BIGINT NOT NULL COMMENT '入账序号',
  TRANS_MSG VARCHAR(128) DEFAULT NULL COMMENT '交易说明',
  ACCOUNT_TYPE INT NOT NULL COMMENT '账务类型',
  TRANSACTION_CODE VARCHAR(32) NOT NULL COMMENT '交易码',
  CUSTOMER_ID BIGINT NOT NULL COMMENT '客户号',
  ACCOUNT_ID BIGINT DEFAULT NULL COMMENT '账号ID',
  LOAN_ID BIGINT NOT NULL COMMENT '借据号',
  LOAN_SCHEDULE_NO INT NOT NULL COMMENT '借据分期序号',
  BILL_ID BIGINT NOT NULL COMMENT '信用账单号',
  BILL_NO INT NOT NULL COMMENT '信用账单分期序号',
  CONSUME_ID BIGINT NOT NULL COMMENT '信用消费号',
  CONSUME_NO INT NOT NULL COMMENT '信用消费分期序号',
  OFF_IND INT NOT NULL COMMENT '还清指示',
  PRODUCT_ID BIGINT NOT NULL COMMENT '产品id',
  PRODUCT_NO BIGINT NOT NULL COMMENT '产品序号',
  INSTITUTION BIGINT NOT NULL COMMENT '资金机构',
  CAPITAL_CHANNEL INT DEFAULT NULL COMMENT '支付渠道',
  SECURITY_IND INT NOT NULL COMMENT '证券化状态',
  PRINCIPAL_ALL BIGINT NOT NULL COMMENT '本金总额',
  PRINCIPAL BIGINT NOT NULL COMMENT '本金金额',
  PRINCIPAL_REDUCE BIGINT NOT NULL COMMENT '本金减免',
  PRINCIPAL_ADJUST BIGINT NOT NULL COMMENT '本金调整',
  INTEREST_ALL BIGINT NOT NULL COMMENT '利息总金额',
  INTEREST BIGINT NOT NULL COMMENT '利息金额',
  INTEREST_REDUCE BIGINT NOT NULL COMMENT '利息减免',
  INTEREST_ADJUST BIGINT NOT NULL COMMENT '利息调整',
  CHARGES BIGINT NOT NULL COMMENT '费用金额',
  CHARGES_REDUCE BIGINT NOT NULL COMMENT '费用减免',
  CHARGES_ADJUST BIGINT NOT NULL COMMENT '费用调整',
  PENALTY BIGINT NOT NULL COMMENT '罚息金额',
  PENALTY_REDUCE BIGINT NOT NULL COMMENT '罚息减免',
  PENALTY_ADJUST BIGINT NOT NULL COMMENT '罚息调整',
  OVERDUE BIGINT NOT NULL COMMENT '滞纳金金额',
  OVERDUE_REDUCE BIGINT NOT NULL COMMENT '滞纳金减免',
  OVERDUE_ADJUST BIGINT NOT NULL COMMENT '滞纳金调整',
  VIOLATE BIGINT NOT NULL COMMENT '违约金金额',
  VIOLATE_REDUCE BIGINT NOT NULL COMMENT '违约金减免',
  VIOLATE_ADJUST BIGINT NOT NULL COMMENT '违约金调整',
  DISCOUNT_ALL BIGINT NOT NULL COMMENT '贴息总额',
  DISCOUNT BIGINT NOT NULL COMMENT '贴息金额',
  DISCOUNT_REDUCE BIGINT NOT NULL COMMENT '贴息减免',
  DISCOUNT_ADJUST BIGINT NOT NULL COMMENT '贴息调整',
  MANAGEMENT_ALL BIGINT NOT NULL COMMENT '账户管理费总额',
  MANAGEMENT BIGINT NOT NULL COMMENT '账户管理费',
  MANAGEMENT_REDUCE BIGINT NOT NULL COMMENT '账户管理费减免',
  MANAGEMENT_ADJUST BIGINT NOT NULL COMMENT '账户管理费调整',
  SERVICE BIGINT NOT NULL COMMENT '服务费',
  SERVICE_REDUCE BIGINT NOT NULL COMMENT '服务费减免',
  SERVICE_ADJUST BIGINT NOT NULL COMMENT '服务费调整',
  FEE BIGINT NOT NULL COMMENT '预留费用',
  FEE_REDUCE BIGINT NOT NULL COMMENT '预留费用减免',
  FEE_ADJUST BIGINT NOT NULL COMMENT '预留费用调整',
  DUES BIGINT NOT NULL COMMENT '会费预留',
  DUES_REDUCE BIGINT NOT NULL COMMENT '会费减免预留',
  DUES_ADJUST BIGINT NOT NULL COMMENT '会费调整预留',
  EXPENSE BIGINT NOT NULL COMMENT '运输费用预留',
  EXPENSE_REDUCE BIGINT NOT NULL COMMENT '运输费用减免预留',
  EXPENSE_ADJUST BIGINT NOT NULL COMMENT '运输费用调整预留',
  COST BIGINT NOT NULL COMMENT '成本费用预留',
  COST_REDUCE BIGINT NOT NULL COMMENT '成本费用减免预留',
  COST_ADJUST BIGINT NOT NULL COMMENT '成本费用调整预留',
  OVER_FLOW BIGINT NOT NULL COMMENT '溢缴款',
  ACCOUNT_DATE DATE NOT NULL COMMENT '请求账务日期',
  LIST_ID BIGINT DEFAULT NULL COMMENT '账务请求ID',
  LIST_DATE DATE DEFAULT NULL COMMENT '账务会计日期',
  START_DATE DATE DEFAULT NULL COMMENT '分期计提开始日期',
  DUE_DATE DATE DEFAULT NULL COMMENT '分期计提结束日期',
  DELETE_FLAG INT NOT NULL COMMENT '记录物理状态',
  VERSION INT NOT NULL COMMENT '乐观锁版本',
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2010-01-01 00:00:00' COMMENT '创建时间'
);
 
DROP TABLE IF EXISTS T_CONSUME;
CREATE TABLE T_CONSUME
(
  MODIFIED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '创建时间',
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  CUSTOMER_ID BIGINT NOT NULL COMMENT '客户ID',
  ACCOUNT_ID BIGINT COMMENT '账号ID',
  PRODUCT_ID BIGINT COMMENT '产品ID',
  PRODUCT_NO BIGINT COMMENT '产品序号',
  TRANSACTION_ID BIGINT NOT NULL COMMENT '交易ID',
  CONSUME_ID BIGINT NOT NULL COMMENT '消费明细ID',
  BILL_ID BIGINT COMMENT '对应账单ID',
  TRANSACTION_DATE DATE NOT NULL COMMENT '交易发起日期',
  TRANSACTION_CONFIRMED_DATE DATE COMMENT '交易确认日期',
  TRANSACTION_CANCELLED_DATE DATE COMMENT '交易取消日期',
  BILL_DATE DATE NOT NULL COMMENT '账单日期',
  REPAY_DATE DATE NOT NULL COMMENT '还款日期',
  CONSUME_AMOUNT BIGINT NOT NULL COMMENT '交易总额',
  CONSUME_STATUS INT NOT NULL COMMENT '消费状态',
  REPAID_AMOUNT BIGINT COMMENT '已还金额',
  BILL_STATUS INT NOT NULL COMMENT '账单状态',
  INSTALLMENT_STATUS INT NOT NULL COMMENT '分期状态',
  INSTALLMENT_BILL_ID BIGINT COMMENT '转分期的分期账单id',
  NOTES VARCHAR(32) COMMENT '摘要说明',
  PRIMARY KEY(ID)
);

DROP TABLE IF EXISTS T_CREDIT_INSTALLMENT;
CREATE TABLE T_CREDIT_INSTALLMENT
(
  MODIFIED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL COMMENT '更新时间',
  CREATED TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:01' COMMENT '创建时间',
  ID BIGINT NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  INSTALLMENT_ID BIGINT COMMENT '全局唯一ID',
  INSTALLMENT_TYPE INT COMMENT '分期类型',
  BILL_ID BIGINT COMMENT '账单ID',
  CONSUME_ID BIGINT COMMENT '消费ID',
  CUSTOMER_ID BIGINT NOT NULL COMMENT '客户ID',
  ACCOUNT_ID BIGINT NOT NULL COMMENT '账号ID',
  PRODUCT_ID BIGINT COMMENT '产品ID',
  PRODUCT_NO BIGINT COMMENT '产品序号',
  INSTALLMENT_COUNT INT COMMENT '总分期数',
  INSTALLMENT_NO INT COMMENT '分期序号',
  ACCOUNT_DATE DATE NOT NULL COMMENT '帐务日期',
  BILL_DATE DATE NOT NULL COMMENT '账单日',
  DUE_DATE DATE NOT NULL COMMENT '到期还款日',
  PRINCIPAL BIGINT NOT NULL COMMENT '本金总金额',
  PRINCIPAL_REPAID BIGINT NOT NULL COMMENT '本金已还金额',
  PRINCIPAL_UNPAID BIGINT NOT NULL COMMENT '本金未还金额',
  CHARGES BIGINT NOT NULL COMMENT '费用总额',
  CHARGES_REPAID BIGINT NOT NULL COMMENT '费用已还金额',
  CHARGES_UNPAID BIGINT NOT NULL COMMENT '费用未还金额',
  PENALTY BIGINT NOT NULL COMMENT '罚息总额',
  PENALTY_REPAID BIGINT NOT NULL COMMENT '罚息已还金额',
  PENALTY_UNPAID BIGINT NOT NULL COMMENT '罚息未还金额',
  OVERDUE BIGINT NOT NULL COMMENT '逾期费总额',
  OVERDUE_REPAID BIGINT NOT NULL COMMENT '逾期费已还金额',
  OVERDUE_UNPAID BIGINT NOT NULL COMMENT '逾期费未还金额',
  VIOLATE BIGINT COMMENT '违约金总额',
  VIOLATE_REPAID BIGINT NOT NULL COMMENT '违约金已还金额',
  VIOLATE_UNPAID BIGINT COMMENT '违约金未还金额',
  REPAID_STATUS INT NOT NULL COMMENT '还款状态',
  INSTALLMENT_STATUS INT NOT NULL COMMENT '信用支付分期状态',
  BILL_STATUS INT NOT NULL COMMENT '账单状态',
  PRIMARY KEY(ID)
);
CREATE PRIMARY KEY ON T_ACCG_REQ_LIST(ID);
CREATE UNIQUE INDEX IDX_REQ ON T_ACCG_REQ_LIST(REQ_TYPE,TRANSACTION_ID,ACCOUNTING_NO);

CREATE TABLE M_MONEY_META (
  STATUS int NOT NULL COMMENT '状态',
  MODIFIED timestamp NOT NULL  COMMENT '更新时间',
  CREATED timestamp NOT NULL  COMMENT '创建时间',
  ID bigint NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  META_ID bigint NOT NULL COMMENT '元数据ID',
  TRAN_TYPE int NOT NULL COMMENT '交易类型',
  META_NAME varchar NOT NULL COMMENT '元数据名称',
  META_KEY int NOT NULL COMMENT '元数据KEY',
  META_VALUE bigint NOT NULL COMMENT '元数据VALUE',
  PRIMARY KEY (ID),
  KEY IDX_META (META_ID)
);

CREATE TABLE M_WRITE_OFF (
  MODIFIED timestamp NOT NULL COMMENT '更新时间',
  CREATED timestamp NOT NULL  COMMENT '创建时间',
  ID bigint NOT NULL AUTO_INCREMENT COMMENT '自增主键',
  WRITE_OFF_ID int(11) DEFAULT NULL COMMENT '冲销顺序ID',
  WRITE_OFF_ORDER varchar NOT NULL COMMENT '冲销顺序',
  PRIMARY KEY (ID),
  UNIQUE KEY IDX_WRITE_OFF_ID (WRITE_OFF_ID)
)